name: Deploy to EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REPOSITORY: frontend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building Docker image..."
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          echo "Tagging image as 'latest'..."
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
          echo "Pushing image with tag $IMAGE_TAG..."
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "Pushing image tagged as 'latest'..."
          docker push $REGISTRY/$REPOSITORY:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Logging into ECR on EC2..."
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            echo "Pulling latest image..."
            docker pull ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:latest
            echo "Stopping and removing existing container..."
            docker stop ${REPOSITORY} || true
            docker rm ${REPOSITORY} || true
            echo "Starting new container..."
            docker run -d --name ${REPOSITORY} -p 2000:2000 ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:latest
