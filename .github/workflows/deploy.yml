name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Prepare SSH Key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
        chmod 600 key.pem

    - name: Deploy to EC2 via SSH
      run: |
        HOST=${{ secrets.EC2_HOST }}
        USER=${{ secrets.EC2_USER }}

        # Log into EC2
        ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "
          # Log into AWS ECR
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com;

          # Pull the latest Docker image
          docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:latest;

          # Check if port 2000 is in use and stop the process if necessary
          if lsof -i:2000; then
            echo 'Port 2000 is in use. Stopping the process...';
            PID=\$(lsof -t -i:2000);
            kill -9 \$PID;
          fi;

          # Stop and remove the existing container if it exists
          docker stop frontend || true;
          docker rm frontend || true;

          # Run the new container
          docker run -d -p 2000:2000 --name frontend ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:latest;

          # Reload Nginx to apply changes
          sudo systemctl reload nginx;
        "
