name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Configure AWS CLI
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t frontend .

    # Authenticate to ECR
    - name: Authenticate to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    # Tag and Push Docker Image to ECR
    - name: Push Docker Image to ECR
      run: |
        docker tag frontend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:latest

    # Deploy to Elastic Beanstalk
    - name: Deploy to Elastic Beanstalk
      run: |
        zip -r deploy.zip Dockerrun.aws.json .ebextensions/
        aws elasticbeanstalk create-application-version \
          --application-name frontend \
          --version-label v-${{ github.sha }} \
          --source-bundle S3Bucket=elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ github.run_id }},S3Key=deploy.zip
        aws elasticbeanstalk update-environment \
          --environment-name ${{ secrets.EB_ENV_NAME }} \
          --version-label v-${{ github.sha }}
